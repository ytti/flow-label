<?xml version="1.0"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc comments="yes"?>
<?rfc compact="yes"?>
<?rfc inline="yes"?>
<?rfc sortrefs="yes"?>
<?rfc subcompact="yes"?>
<?rfc symrefs="yes"?>
<?rfc toc="yes"?>
<?rfc tocdepth="3"?>
<?rfc tocindent="yes"?>
<?rfc tocompact="yes"?>
<?rfc strict="yes"?>


<rfc category="std" docName="draft-ytti-v6ops-flow-label-00" updates="RFC8200">
    <front>
        <title abbrev="Flow Label">
            IPv6 Flow Label
        </title>

        <author fullname="Saku Ytti" initials="S." surname="Ytti">
            <organization abbrev="NTT">NTT Communications</organization>
            <address>
                <email>ytti@ntt.net</email>
            </address>
        </author>

        <date />

        <area>Operations and Management</area>
        <workgroup>v6ops</workgroup>
        <keyword>Flow Label</keyword>

        <abstract>
            <t>
                This document specified behaviour of IPv6 Flow Label field.
            </t>
        </abstract>

        <note title="Requirements Language">
            <t>
                The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they appear in all capitals, as shown here.
            </t>
        </note>

    </front>

    <middle>
        <section anchor="problem" title="Problem Statement">
            <t>
                Currently in <xref target="RFC6437" /> IPv6 Flow Label behaviour is defined in such manner that source host cannot predict how setting the Flow Label field will affect behaviour.
                Source host has two separate problems it may want to communicate.
                First problem is that source host may want to communicate that two packets with non-identical L3, L4 and LI keys belong to a same flow.
                Second problem is that source host imay want to communicate that two packets with identical L3, L4 and LI keys belong to a different flow.
                Currenty neither is possible.
                Host might not use flow label at all for flow speculation, it might use flow label exclusively or it might use some combination.
                One currently perfectly valid implementation would be to use L3 keys + Flow Label when next-header is not UDP or TCP otherwise use L3 keys + L4 keys.
            </t>
        </section>

        <section anchor="terminology" title="Terminology">
            <t>
                This document uses the following terms:
                <list style="hanging">
                    <t hangText="Flow speculation:">
                        Process where host associates packet as a member of a flow
                    </t>
                    <t></t>
                    <t hangText="L3 Keys:">
                        Any fields in L3 headers used as keys in Flow Speculatoin
                    </t>
                    <t></t>
                    <t hangText="L4 Keys:">
                        Any fields in L4 headers used as keys in Flow Speculatoin
                    </t>
                    <t></t>
                    <t hangText="LI Keys:">
                        Any other than L3 and L4 headers in IP packet used as keys in Flow Speculation.
                        Host may look beyond L4 for example in tunneling, GTP TEID particularly is commonly supported.
                    </t>
                </list>
            </t>
        </section>

        <section anchor="flag" title="Exclusive Key Flag">
            <t>
                The most significant bit in IPv6 Flow Label is called EKF or 'Exclusive Key Flag'.
                When EKF is set host MUST not use any other L3, L4 or LI key for Flow Speculation.
                When EKF is unset host MAY use other L3, L4 and LI keys for Flow Speculation.
            </t>
            <t>
                Other keys than L3, L4 and LI keys may still be used for Flow Speculation when EKF is set.
                Example of other key would be for example an ingress interface.
            </t>
        </section>

    </middle>

    <back>
        <references title="Normative References">
            <?rfc include="reference.RFC.2119"?>
            <?rfc include="reference.RFC.8174"?>
            <?rfc include="reference.RFC.8200"?>
        </references>
        <references title="Informative References">
            <?rfc include="reference.RFC.6437"?>
        </references>

        <section anchor="acknowledgments" title="Acknowledgments">
            <t>
            </t>
        </section>
    </back>

</rfc>
